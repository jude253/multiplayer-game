module(name = "multiplayer-game")

bazel_dep(name = "rules_python", version = "1.0.0")

# https://github.com/bazelbuild/bazel-skylib/blob/main/README.md
bazel_dep(name = "bazel_skylib", version = "1.7.1")

# https://github.com/bazel-contrib/bazel-lib/blob/main/README.md
bazel_dep(name = "aspect_bazel_lib", version = "2.10.0")

# https://github.com/aspect-build/rules_lint
bazel_dep(name = "aspect_rules_lint", version = "1.0.8")

# https://github.com/theoremlp/rules_uv
bazel_dep(name = "rules_uv", version = "0.49.0")

python_version = "3.13"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,  # This might be slowing down builds by adding many more targets
    is_default = True,
    # We can specify the exact version.
    python_version = python_version,
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    download_only = True,
    hub_name = "pypi",
    # We need to use the same version here as in the `python.toolchain` call.
    python_version = python_version,
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pypi")

## emsdk
# https://bazel.build/external/migration#fetch-deps-module-extensions
# https://github.com/emscripten-core/emsdk/tree/main/bazel
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "emsdk",
    build_file = "@//:tools/emsdk.BUILD",
    integrity = "sha256-hlz2GEgxWItjWT5JGWSrBonc5mX2AS0OJOR1i27lFkw=",
    url = "https://github.com/emscripten-core/emsdk/archive/refs/tags/4.0.1.zip",
)

# https://github.com/aspect-build/rules_ts
bazel_dep(name = "aspect_rules_ts", version = "3.4.0")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps(
    ts_version_from = "//:package.json",
)
use_repo(rules_ts_ext, "npm_typescript")

# https://github.com/aspect-build/rules_js
bazel_dep(name = "aspect_rules_js", version = "2.1.3")

node_version = "20.13.1"

####### Node.js version #########
# By default you get the node version from DEFAULT_NODE_VERSION in @rules_nodejs//nodejs:repositories.bzl
# Optionally you can pin a different node version:
bazel_dep(name = "rules_nodejs", version = "6.3.0")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = node_version)
#################################

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

# Update lock file: https://github.com/aspect-build/rules_js/blob/main/docs/pnpm.md#update_pnpm_lock
# bazel run -- @pnpm//:pnpm --dir $PWD install --lockfile-only
npm.npm_translate_lock(
    name = "npm",
    data = [
        "//:package.json",
        "//:pnpm-workspace.yaml",
        "//infra:package.json",
    ],
    pnpm_lock = "//:pnpm-lock.yaml",
    # verify_node_modules_ignored = "//:.bazelignore",  # I don't understand this
)

use_repo(node, "nodejs_toolchains")

use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")
